{"version":3,"sources":["serviceWorker.ts","components/Auth0Provider.tsx","global.styles.ts","components/PrivateRoute.tsx","components/SearchBar.tsx","components/LazyImage.tsx","components/GifList.tsx","hooks/useDebounce.ts","api.ts","components/Search.tsx","components/Details.tsx","components/NavBar.tsx","components/Profile.tsx","components/Tooltip.tsx","components/Selection.tsx","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Auth0Context","createContext","useAuth0","useContext","Auth0Provider","children","initOptions","useState","auth0Client","setAuth0Client","loading","setLoading","isAuthenticated","setIsAuthenticated","user","setUser","useEffect","a","createAuth0Client","auth0","getUser","loginWithPopup","options","Provider","value","logout","GlobalStyle","createGlobalStyle","PrivateRoute","Component","component","path","rest","PrivateComponent","SearchContainer","styled","div","Input","input","Button","button","SearchBar","search","onSearch","onSubmit","ref","useRef","onChange","useCallback","event","target","onKeyDown","key","current","focus","placeholder","onClick","Rectangle","LazyImage","src","alt","width","height","style","GifPreviewLink","Link","Message","masonryOptions","fitWidth","columnWidth","gutter","transitionDuration","resize","GifList","gifs","hasMore","isLoading","loadMore","debouncedScrollY","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","useScrollYPosition","scrolledToBottom","innerHeight","document","documentElement","offsetHeight","length","className","elementType","disableImagesLoaded","updateOnEachImageLoad","map","gif","i","to","id","images","fixed_width","url","title","API_SEARCH","API_TRENDING","API_GET_BY_ID","API_KEY","process","PAGE_SIZE","getGif","params","Object","entries","api_key","limit","offset","q","join","fetch","res","json","searchGifs","endpoint","getGifById","Title","h1","Search","useParams","query","history","useHistory","setGifs","setOffset","total","setTotal","setSearch","debouncedSearch","setDebouncedSearch","setIsLoading","getMoreGifs","data","pagination","meta","status","count","concat","total_count","push","listen","pathname","Details","gifId","setGif","original","NavBarContainer","header","NavBarSection","NavBarLink","AuthButton","Username","span","ProfilePic","img","NavBar","name","picture","ProfileContainer","ProfileItem","Profile","email","TooltipContainer","Tooltip","left","top","show","Selection","selectedString","setSelectedString","range","setRange","setLeft","setTop","onMouseUp","selection","getSelection","getRangeAt","toString","$span","createElement","insertNode","getBoundingClientRect","x","y","AppContainer","main","App","ReactDOM","render","basename","domain","client_id","clientId","getElementById","URL","href","origin","addEventListener","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efab3d1d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\n\ninterface UserProfile {\n  name: string;\n  email: string;\n  picture: string;\n}\n\ninterface Auth0ContextProps {\n  isAuthenticated: boolean;\n  user: UserProfile | null;\n  loading: boolean;\n  loginWithPopup: (options?: PopupLoginOptions, config?: PopupConfigOptions) => Promise<void>;\n  logout: (options?: LogoutOptions) => void;\n}\n\nexport const Auth0Context = createContext<Partial<Auth0ContextProps>>({});\nexport const useAuth0 = () => useContext(Auth0Context);\n\nconst Auth0Provider: React.FC<Auth0ClientOptions> = ({ children, ...initOptions }) => {\n  const [auth0Client, setAuth0Client] = useState<Auth0Client | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState<UserProfile | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      const auth0 = await createAuth0Client(initOptions);\n      setAuth0Client(auth0);\n      const isAuthenticated = await auth0.isAuthenticated();\n      setIsAuthenticated(isAuthenticated);\n      if (isAuthenticated) {\n        const user = await auth0.getUser();\n        setUser(user);\n      }\n      setLoading(false);\n    })();\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, []);\n\n  const loginWithPopup = async (options?: PopupLoginOptions, config?: PopupConfigOptions) => {\n    if (!auth0Client) return;\n    setLoading(true);\n    try {\n      await auth0Client.loginWithPopup(options, config);\n    } catch (error) {\n      console.error(error);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n    setLoading(false);\n  };\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        loginWithPopup,\n        logout: (...p) => auth0Client && auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n\nexport default Auth0Provider;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:300,600,900');\n\n  html, body {\n    font-family: Roboto, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: black;\n    color: white;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\nimport { useAuth0 } from './Auth0Provider';\n\ntype PrivateRouteProps = {\n  component: any;\n} & RouteProps;\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithPopup } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    if (loginWithPopup) {\n      (async () => {\n        await loginWithPopup();\n      })();\n    }\n  }, [loading, isAuthenticated, loginWithPopup, path]);\n\n  const PrivateComponent = isAuthenticated ? Component : null;\n\n  return <Route path={path} component={PrivateComponent} {...rest} />;\n};\n\nexport default PrivateRoute;\n","import React, { useRef, useCallback, ChangeEvent, KeyboardEvent, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst SearchContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  flex-grow: 1;\n  padding: 10px 15px;\n  font-size: 20px;\n  height: 100%;\n  outline: none;\n`;\n\nconst Button = styled.button`\n  height: 100%;\n  border: none;\n  background-image: linear-gradient(\n    45deg,\n    rgb(153, 51, 255) 0%,\n    rgb(255, 102, 102) 50%,\n    rgb(153, 51, 255) 100%\n  );\n  cursor: pointer;\n  width: 50px;\n  color: white;\n  font-size: 20px;\n`;\n\ninterface SearchBarProps {\n  search: string;\n  onSearch: (value: string) => void;\n  onSubmit: () => void;\n}\n\nconst SearchBar: React.FC<SearchBarProps> = ({ search = '', onSearch, onSubmit }) => {\n  const ref = useRef<HTMLInputElement>(null);\n\n  const onChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      onSearch(value);\n    },\n    [onSearch]\n  );\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      const { key } = event;\n      if (key === 'Enter') {\n        onSubmit();\n      }\n    },\n    [onSubmit]\n  );\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, []);\n\n  return (\n    <SearchContainer>\n      <Input\n        placeholder=\"Search...\"\n        value={search}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        ref={ref}\n      ></Input>\n      <Button onClick={onSubmit}>Go</Button>\n    </SearchContainer>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Rectangle = styled.div`\n  background-color: #222;\n`;\n\ninterface LazyImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n}\n\nconst LazyImage: React.FC<LazyImageProps> = ({ src, alt, width, height }) => (\n  <Rectangle style={{ width: `${width}px`, height: `${height}px` }}>\n    <img src={src} alt={alt} />\n  </Rectangle>\n);\n\nexport default LazyImage;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Masonry, { MasonryOptions } from 'react-masonry-component';\nimport { useScrollYPosition } from 'react-use-scroll-position';\nimport LazyImage from './LazyImage';\nimport useDebounce from '../hooks/useDebounce';\nimport { Gif } from '../api';\n\nconst GifPreviewLink = styled(Link)`\n  margin-bottom: 5px;\n`;\n\nconst Message = styled.div`\n  padding: 20px;\n`;\n\nconst masonryOptions: MasonryOptions = {\n  fitWidth: true,\n  columnWidth: 200,\n  gutter: 5,\n  transitionDuration: 0,\n  resize: true,\n};\n\ninterface GifListProps {\n  gifs: Gif[];\n  hasMore: boolean;\n  isLoading: boolean;\n  loadMore: () => void;\n}\n\nconst GifList: React.FC<GifListProps> = ({ gifs, hasMore, isLoading, loadMore }) => {\n  const scrollY = useScrollYPosition();\n  const debouncedScrollY = useDebounce(scrollY, 100);\n\n  useEffect(() => {\n    const scrolledToBottom =\n      window.innerHeight + debouncedScrollY >= document.documentElement.offsetHeight - 50;\n\n    if (!isLoading && hasMore && scrolledToBottom) {\n      loadMore();\n    }\n  }, [loadMore, debouncedScrollY, isLoading, hasMore]);\n\n  if (!isLoading && (!gifs || gifs.length === 0)) {\n    return <div>No Results</div>;\n  }\n\n  return (\n    <>\n      <Masonry\n        className={'grid'}\n        elementType={'div'}\n        options={masonryOptions}\n        disableImagesLoaded={false}\n        updateOnEachImageLoad={false}\n      >\n        {gifs.map((gif, i) => (\n          <GifPreviewLink key={i} to={`/gifs/${gif.id}`}>\n            <LazyImage\n              src={gif.images.fixed_width.url}\n              width={gif.images.fixed_width.width}\n              height={gif.images.fixed_width.height}\n              alt={gif.title}\n            ></LazyImage>\n          </GifPreviewLink>\n        ))}\n      </Masonry>\n      <Message>\n        {isLoading || hasMore ? 'Loading...' : null}\n        {!isLoading && !hasMore ? 'End of results' : null}\n      </Message>\n    </>\n  );\n};\n\nexport default GifList;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","const API_SEARCH = 'https://api.giphy.com/v1/gifs/search';\nconst API_TRENDING = 'https://api.giphy.com/v1/gifs/trending';\nconst API_GET_BY_ID = 'https://api.giphy.com/v1/gifs';\nconst API_KEY = process.env.REACT_APP_API_KEY || '';\nconst PAGE_SIZE = 50;\n\nexport interface Gif {\n  id: string;\n  title: string;\n  images: {\n    fixed_width: {\n      width: number;\n      height: number;\n      url: string;\n    };\n    original: {\n      width: number;\n      height: number;\n      url: string;\n    };\n  };\n}\n\nexport interface Pagination {\n  offset: number;\n  total_count: number;\n  count: number;\n}\n\nexport interface Metadata {\n  msg: string;\n  status: number;\n  response_id: string;\n}\n\nexport interface SearchGifsResponse {\n  data: Gif[];\n  pagination: Pagination;\n  meta: Metadata;\n}\n\nexport interface GetGifByIdResponse {\n  data: Gif;\n  meta: Metadata;\n}\n\nexport async function getGif(search: string): Promise<SearchGifsResponse> {\n  const params = Object.entries({\n    api_key: API_KEY,\n    limit: 1,\n    offset: 0,\n    ...(search ? { q: search } : {}),\n  })\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  const url = `${API_SEARCH}?${params}`;\n  const res = await fetch(url);\n  return res.json();\n}\n\nexport async function searchGifs(search: string, offset: number): Promise<SearchGifsResponse> {\n  const endpoint = search ? API_SEARCH : API_TRENDING;\n  const params = Object.entries({\n    api_key: API_KEY,\n    limit: PAGE_SIZE,\n    offset,\n    ...(search ? { q: search } : {}),\n  })\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  const url = `${endpoint}?${params}`;\n  const res = await fetch(url);\n  return res.json();\n}\n\nexport async function getGifById(id: string): Promise<GetGifByIdResponse> {\n  const res = await fetch(`${API_GET_BY_ID}/${id}?api_key=${API_KEY}`);\n  return res.json();\n}\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport SearchBar from './SearchBar';\nimport GifList from './GifList';\nimport { searchGifs, Gif } from '../api';\n\nconst Title = styled.h1``;\n\nconst Search: React.FC = () => {\n  const { query = '' } = useParams();\n  const history = useHistory();\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [offset, setOffset] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [search, setSearch] = useState(query);\n  const [debouncedSearch, setDebouncedSearch] = useState(query);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getMoreGifs = useCallback(async () => {\n    setIsLoading(true);\n    const { data, pagination, meta } = await searchGifs(search, offset);\n    if (meta && meta.status === 200 && data && pagination && pagination.count) {\n      setGifs(gifs.concat(data));\n      setOffset(pagination.offset + pagination.count);\n      setTotal(pagination.total_count);\n    }\n    setIsLoading(false);\n  }, [search, offset, gifs]);\n\n  const onSubmit = useCallback(() => {\n    history.push(`/search/${search}`);\n  }, [search, history]);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedSearch(search);\n    }, 500);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [search]);\n\n  useEffect(() => {\n    return history.listen(location => {\n      const query = (location.pathname.match(/\\/search\\/(.*)/) || [])[1];\n      setSearch(query);\n      setDebouncedSearch(query);\n    });\n  }, [history]);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const { data, pagination, meta } = await searchGifs(debouncedSearch, 0);\n      if (meta && meta.status === 200 && data && pagination && pagination.count) {\n        setGifs(data);\n        setOffset(pagination.offset + pagination.count);\n        setTotal(pagination.total_count);\n      }\n      setIsLoading(false);\n    })();\n  }, [debouncedSearch]);\n\n  return (\n    <>\n      <Title>Search GIFs</Title>\n      <SearchBar search={search} onSearch={setSearch} onSubmit={onSubmit} />\n      <GifList gifs={gifs} loadMore={getMoreGifs} hasMore={offset < total} isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport styled from 'styled-components';\nimport { getGifById, Gif } from '../api';\nimport LazyImage from './LazyImage';\n\nconst Title = styled.h1`\n  font-weight: bold;\n`;\n\nconst Details: React.FC = () => {\n  const { gifId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [gif, setGif] = useState<Gif | null>(null);\n\n  const getGif = useCallback(async () => {\n    if (gifId) {\n      setLoading(true);\n      const { data, meta } = await getGifById(gifId);\n      if (meta && meta.status === 200 && data) {\n        setGif(data);\n      }\n      setLoading(false);\n    }\n  }, [gifId]);\n\n  useEffect(() => {\n    getGif();\n  }, [getGif]);\n\n  return (\n    <>\n      <Title>{loading ? '' : gif && gif.title}</Title>\n      {gif ? (\n        <LazyImage\n          src={gif.images.original.url}\n          width={gif.images.original.width}\n          height={gif.images.original.height}\n          alt={gif.title}\n        />\n      ) : (\n        'Loading...'\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAuth0 } from './Auth0Provider';\n\nconst NavBarContainer = styled.header`\n  width: 100%;\n  height: 50px;\n  background: #222;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 10px;\n`;\n\nconst NavBarSection = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst NavBarLink = styled(Link)`\n  color: white;\n  margin: 0 10px;\n`;\n\nconst AuthButton = styled.button`\n  height: 100%;\n  background: none;\n  color: white;\n  font-size: 1rem;\n  border: none;\n  cursor: pointer;\n`;\n\nconst Username = styled.span`\n  margin: 0 10px;\n`;\n\nconst ProfilePic = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 30px;\n  margin: 0 px;\n`;\n\nconst NavBar: React.FC = () => {\n  const {\n    isAuthenticated,\n    loginWithPopup = () => {},\n    logout = () => {},\n    user = { name: '', picture: '' },\n  } = useAuth0();\n  return (\n    <NavBarContainer>\n      <NavBarSection>\n        <NavBarLink to=\"/\">Search Gifs</NavBarLink>\n        <NavBarLink to=\"/profile\">Profile</NavBarLink>\n      </NavBarSection>\n      <NavBarSection>\n        {!isAuthenticated ? <AuthButton onClick={() => loginWithPopup()}>Login</AuthButton> : null}\n        {isAuthenticated ? (\n          <>\n            <Username>{user && user.name}</Username>\n            {user && user.picture ? <ProfilePic src={user.picture} alt=\"Profile\" /> : null}\n            <AuthButton onClick={() => logout()}>Logout</AuthButton>\n          </>\n        ) : null}\n      </NavBarSection>\n    </NavBarContainer>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAuth0 } from './Auth0Provider';\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ProfileItem = styled.div`\n  margin: 10px;\n`;\n\nconst Title = styled.h1``;\n\nconst Profile: React.FC = () => {\n  const { user = { name: '', email: '', picture: '' } } = useAuth0();\n\n  return (\n    <ProfileContainer>\n      <Title>Profile</Title>\n      <ProfileItem>{user && user.name}</ProfileItem>\n      <ProfileItem>{user && user.email}</ProfileItem>\n      <ProfileItem>{user && <img src={user.picture} alt=\"Profile\" />}</ProfileItem>\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TooltipContainer = styled.div`\n  position: absolute;\n`;\n\ninterface TooltipProps {\n  show: boolean;\n  left: number;\n  top: number;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ left, top, show, children }) => {\n  console.log(left, top);\n  if (!show) return null;\n  return <TooltipContainer>{children}</TooltipContainer>;\n};\n\nexport default Tooltip;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { getGif, Gif } from '../api';\nimport LazyImage from './LazyImage';\nimport Tooltip from './Tooltip';\n\nconst Selection: React.FC = () => {\n  const [selectedString, setSelectedString] = useState('');\n  const [range, setRange] = useState<Range | null>(null);\n  const [left, setLeft] = useState(0);\n  const [top, setTop] = useState(0);\n  const [gif, setGif] = useState<Gif | null>(null);\n\n  // TODO: check if it works on mobile\n  const onMouseUp = useCallback(() => {\n    const selection = window.getSelection();\n    setRange(selection ? selection.getRangeAt(0) : null);\n    setSelectedString(selection ? selection.toString() : '');\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const { meta, data, pagination } = await getGif(selectedString);\n      if (meta.status === 200 && pagination.count === 1 && data) {\n        setGif(data[0]);\n      }\n    })();\n    if (range) {\n      const $span = document.createElement('span');\n      range.insertNode($span);\n      const { x, y } = $span.getBoundingClientRect();\n      setLeft(x);\n      setTop(y);\n    }\n  }, [selectedString, range]);\n\n  return (\n    <>\n      <p onMouseUp={onMouseUp}>\n        In Wikipedia and other sites running on MediaWiki, Special:Random can be used to access a\n        random article in the main namespace; this feature is useful as a tool to generate a random\n        article. Depending on your browser, it's also possible to load a random page using a\n        keyboard shortcut (in Firefox, Edge, and Chrome Alt-Shift+X). To create a link to a random\n        page in a different namespace, use ... For example, Special:Random/Talk will take you to a\n        random article's talk page.\n      </p>\n      <Tooltip show={!!gif} left={left} top={top}>\n        {gif ? (\n          <LazyImage\n            src={gif.images.original.url}\n            width={gif.images.original.width}\n            height={gif.images.original.height}\n            alt={gif.title}\n          />\n        ) : null}\n      </Tooltip>\n    </>\n  );\n};\n\nexport default Selection;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { GlobalStyle } from './global.styles';\nimport PrivateRoute from './components/PrivateRoute';\nimport Search from './components/Search';\nimport Details from './components/Details';\nimport NavBar from './components/NavBar';\nimport Profile from './components/Profile';\nimport Selection from './components/Selection';\n\nconst AppContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 815px;\n  height: 100%;\n  margin: auto;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <NavBar />\n      <AppContainer>\n        <Switch>\n          <Route path=\"/search/:query?\" component={Search} />\n          <Route path=\"/gifs/:gifId\" component={Details} />\n          <Route path=\"/selection\" component={Selection} />\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <Route path=\"*\">\n            <Redirect to=\"/search\" />\n          </Route>\n        </Switch>\n      </AppContainer>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Auth0Provider from './components/Auth0Provider';\nimport App from './App';\nimport config from './auth-config.json';\n\nReactDOM.render(\n  <BrowserRouter basename={'giphy-app'}>\n    <Auth0Provider domain={config.domain} client_id={config.clientId}>\n      <App />\n    </Auth0Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}